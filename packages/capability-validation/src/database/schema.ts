// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-15
// Task: M7 Phase1 - B1: 案例数据模型 - 数据库Schema

import Database from 'better-sqlite3';

/**
 * ValidationCase 数据库表Schema
 */
export const VALIDATION_CASE_SCHEMA = `
  CREATE TABLE IF NOT EXISTS validation_cases (
    id TEXT PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    category TEXT NOT NULL,
    difficulty TEXT NOT NULL,
    tags TEXT NOT NULL, -- JSON array
    
    -- Scenario
    scenario_context TEXT NOT NULL,
    scenario_task TEXT NOT NULL,
    scenario_input TEXT NOT NULL,
    scenario_constraints TEXT, -- JSON array
    
    -- Expected
    expected_type TEXT NOT NULL,
    expected_content TEXT,
    expected_pattern TEXT,
    expected_criteria TEXT, -- JSON array
    expected_examples TEXT, -- JSON array
    
    -- Scoring
    scoring_accuracy INTEGER NOT NULL,
    scoring_completeness INTEGER NOT NULL,
    scoring_creativity INTEGER NOT NULL,
    scoring_efficiency INTEGER NOT NULL,
    scoring_custom_criteria TEXT, -- JSON array
    
    -- Author
    author_name TEXT NOT NULL,
    author_expertise TEXT,
    author_reputation INTEGER,
    
    -- Stats
    stats_submissions INTEGER DEFAULT 0,
    stats_average_score REAL DEFAULT 0,
    stats_pass_rate REAL DEFAULT 0,
    stats_tool_performance TEXT, -- JSON object
    
    -- Metadata
    created_at INTEGER NOT NULL,
    updated_at INTEGER NOT NULL,
    version TEXT NOT NULL,
    is_public INTEGER DEFAULT 1,
    is_certified INTEGER DEFAULT 0
  );
  
  CREATE INDEX IF NOT EXISTS idx_cases_category ON validation_cases(category);
  CREATE INDEX IF NOT EXISTS idx_cases_difficulty ON validation_cases(difficulty);
  CREATE INDEX IF NOT EXISTS idx_cases_author ON validation_cases(author_name);
  CREATE INDEX IF NOT EXISTS idx_cases_public ON validation_cases(is_public);
  CREATE INDEX IF NOT EXISTS idx_cases_certified ON validation_cases(is_certified);
  CREATE INDEX IF NOT EXISTS idx_cases_created_at ON validation_cases(created_at);
  CREATE INDEX IF NOT EXISTS idx_cases_updated_at ON validation_cases(updated_at);
  CREATE INDEX IF NOT EXISTS idx_cases_avg_score ON validation_cases(stats_average_score);
  CREATE INDEX IF NOT EXISTS idx_cases_pass_rate ON validation_cases(stats_pass_rate);
`;

/**
 * CaseExecution 数据库表Schema
 */
export const CASE_EXECUTION_SCHEMA = `
  CREATE TABLE IF NOT EXISTS case_executions (
    id TEXT PRIMARY KEY,
    case_id TEXT NOT NULL,
    tool TEXT NOT NULL,
    model TEXT,
    config TEXT, -- JSON object
    
    executed_at INTEGER NOT NULL,
    duration INTEGER NOT NULL,
    output TEXT NOT NULL,
    
    -- Scores
    score_accuracy REAL NOT NULL,
    score_completeness REAL NOT NULL,
    score_creativity REAL NOT NULL,
    score_efficiency REAL NOT NULL,
    score_overall REAL NOT NULL,
    score_custom TEXT, -- JSON object
    
    -- Analysis
    analysis_strengths TEXT, -- JSON array
    analysis_weaknesses TEXT, -- JSON array
    analysis_suggestions TEXT, -- JSON array
    
    -- User feedback
    user_rating INTEGER,
    user_feedback TEXT,
    
    FOREIGN KEY (case_id) REFERENCES validation_cases(id) ON DELETE CASCADE
  );
  
  CREATE INDEX IF NOT EXISTS idx_executions_case ON case_executions(case_id);
  CREATE INDEX IF NOT EXISTS idx_executions_tool ON case_executions(tool);
  CREATE INDEX IF NOT EXISTS idx_executions_date ON case_executions(executed_at);
`;

/**
 * CaseVersion 数据库表Schema（版本管理）
 */
export const CASE_VERSION_SCHEMA = `
  CREATE TABLE IF NOT EXISTS case_versions (
    id TEXT PRIMARY KEY,
    case_id TEXT NOT NULL,
    version TEXT NOT NULL,
    changes TEXT NOT NULL,
    created_at INTEGER NOT NULL,
    created_by TEXT NOT NULL,
    
    -- 快照数据（完整的案例JSON）
    snapshot_data TEXT NOT NULL,
    
    FOREIGN KEY (case_id) REFERENCES validation_cases(id) ON DELETE CASCADE
  );
  
  CREATE INDEX IF NOT EXISTS idx_versions_case ON case_versions(case_id);
  CREATE INDEX IF NOT EXISTS idx_versions_created ON case_versions(created_at);
`;

/**
 * 初始化所有表
 */
export function initializeCaseDatabase(db: Database.Database): void {
  db.exec(VALIDATION_CASE_SCHEMA);
  db.exec(CASE_EXECUTION_SCHEMA);
  db.exec(CASE_VERSION_SCHEMA);
}
