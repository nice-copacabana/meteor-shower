// Generated by Qoder AI (Model: claude-sonnet-4-20250514) - 2025-10-14
// Task: M6 Phase2 - 团队和部门数据结构

import { Database } from 'better-sqlite3';

/**
 * 团队信息
 */
export interface Team {
  id: string;
  name: string;
  description?: string;
  organization_id: string;
  created_by: string;
  created_at: number;
  updated_at: number;
}

/**
 * 部门信息
 */
export interface Department {
  id: string;
  name: string;
  description?: string;
  organization_id: string;
  parent_department_id?: string;  // 支持部门层级
  created_by: string;
  created_at: number;
  updated_at: number;
}

/**
 * 团队成员
 */
export interface TeamMember {
  team_id: string;
  user_id: string;
  role: 'member' | 'lead' | 'admin';
  joined_at: number;
}

/**
 * 部门成员
 */
export interface DepartmentMember {
  department_id: string;
  user_id: string;
  role: 'member' | 'manager' | 'director';
  joined_at: number;
}

/**
 * 团队和部门Schema管理器
 */
export class TeamDepartmentSchema {
  private db: Database;

  constructor(db: Database) {
    this.db = db;
  }

  /**
   * 初始化团队和部门表
   */
  initializeTables(): void {
    // 团队表
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS teams (
        id TEXT PRIMARY KEY,
        name TEXT NOT NULL,
        description TEXT,
        organization_id TEXT NOT NULL,
        created_by TEXT NOT NULL,
        created_at INTEGER NOT NULL,
        updated_at INTEGER NOT NULL,
        FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE,
        FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL
      )
    `);

    // 部门表
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS departments (
        id TEXT PRIMARY KEY,
        name TEXT NOT NULL,
        description TEXT,
        organization_id TEXT NOT NULL,
        parent_department_id TEXT,
        created_by TEXT NOT NULL,
        created_at INTEGER NOT NULL,
        updated_at INTEGER NOT NULL,
        FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE,
        FOREIGN KEY (parent_department_id) REFERENCES departments(id) ON DELETE SET NULL,
        FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL
      )
    `);

    // 团队成员表
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS team_members (
        team_id TEXT NOT NULL,
        user_id TEXT NOT NULL,
        role TEXT NOT NULL DEFAULT 'member',
        joined_at INTEGER NOT NULL,
        PRIMARY KEY (team_id, user_id),
        FOREIGN KEY (team_id) REFERENCES teams(id) ON DELETE CASCADE,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        CHECK (role IN ('member', 'lead', 'admin'))
      )
    `);

    // 部门成员表
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS department_members (
        department_id TEXT NOT NULL,
        user_id TEXT NOT NULL,
        role TEXT NOT NULL DEFAULT 'member',
        joined_at INTEGER NOT NULL,
        PRIMARY KEY (department_id, user_id),
        FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        CHECK (role IN ('member', 'manager', 'director'))
      )
    `);

    // 创建索引
    this.db.exec(`
      CREATE INDEX IF NOT EXISTS idx_teams_org ON teams(organization_id);
      CREATE INDEX IF NOT EXISTS idx_departments_org ON departments(organization_id);
      CREATE INDEX IF NOT EXISTS idx_departments_parent ON departments(parent_department_id);
      CREATE INDEX IF NOT EXISTS idx_team_members_user ON team_members(user_id);
      CREATE INDEX IF NOT EXISTS idx_dept_members_user ON department_members(user_id);
    `);
  }
}
