// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-17
// Task: 创建M6用户分层系统的完整数据库模型（5张核心表：users, organizations, quota_usage, subscriptions, audit_logs）

/**
 * 数据库模型定义
 * 
 * 根据设计文档实现完整的用户分层系统数据模型
 */

import Database from 'better-sqlite3';

/**
 * 用户表模型
 */
export interface UserModel {
  id: string;                    // UUID
  email: string;                 // 用户邮箱
  password_hash: string;         // 密码哈希
  tier: 'FREE' | 'PROFESSIONAL' | 'TEAM' | 'ENTERPRISE';  // 用户层级
  created_at: number;            // 创建时间（Unix时间戳）
  updated_at: number;            // 更新时间
  last_login_at: number | null;  // 最后登录时间
}

/**
 * 组织表模型
 */
export interface OrganizationModel {
  id: string;                    // UUID
  name: string;                  // 组织名称
  tier: 'TEAM' | 'ENTERPRISE';   // 组织层级
  owner_id: string;              // 组织所有者
  member_count: number;          // 成员数量
  created_at: number;            // 创建时间
  max_members: number;           // 最大成员数
}

/**
 * 配额使用表模型
 */
export interface QuotaUsageModel {
  id: string;                    // UUID
  user_id: string;               // 用户标识
  resource_type: 'TOOL' | 'CLOUD_TEMPLATE' | 'VALIDATION' | 'CONCURRENT_TASK' | 'STORAGE';  // 资源类型
  used_count: number;            // 已使用数量
  limit_count: number;           // 配额限制
  reset_at: number;              // 配额重置时间
  created_at: number;            // 创建时间
}

/**
 * 订阅表模型
 */
export interface SubscriptionModel {
  id: string;                    // UUID
  user_id: string;               // 用户标识
  tier: 'PROFESSIONAL' | 'TEAM' | 'ENTERPRISE';  // 订阅层级
  status: 'ACTIVE' | 'CANCELLED' | 'EXPIRED';    // 订阅状态
  start_date: string;            // 订阅开始日期 (ISO 8601)
  end_date: string | null;       // 订阅结束日期
  auto_renew: number;            // 是否自动续费 (0/1)
  payment_method: 'ALIPAY' | 'WECHAT' | 'STRIPE';  // 支付方式
  created_at: number;            // 创建时间
}

/**
 * 审计日志表模型
 */
export interface AuditLogModel {
  id: string;                    // UUID
  user_id: string;               // 操作用户
  action: string;                // 操作类型 (CREATE/UPDATE/DELETE等)
  resource_type: string;         // 资源类型 (USER/CASE/TASK等)
  resource_id: string | null;    // 资源标识
  timestamp: number;             // 操作时间
  ip_address: string | null;     // IP地址
  metadata: string | null;       // 附加元数据 (JSON字符串)
}

/**
 * 创建所有表的SQL语句
 */
export const CREATE_TABLES_SQL_V2 = {
  /**
   * 用户表
   */
  users: `
    CREATE TABLE IF NOT EXISTS users (
      id TEXT PRIMARY KEY,
      email TEXT UNIQUE NOT NULL,
      password_hash TEXT NOT NULL,
      tier TEXT NOT NULL CHECK(tier IN ('FREE', 'PROFESSIONAL', 'TEAM', 'ENTERPRISE')),
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      last_login_at INTEGER
    )
  `,

  /**
   * 组织表
   */
  organizations: `
    CREATE TABLE IF NOT EXISTS organizations (
      id TEXT PRIMARY KEY,
      name TEXT NOT NULL,
      tier TEXT NOT NULL CHECK(tier IN ('TEAM', 'ENTERPRISE')),
      owner_id TEXT NOT NULL,
      member_count INTEGER DEFAULT 1,
      created_at INTEGER NOT NULL,
      max_members INTEGER NOT NULL,
      FOREIGN KEY (owner_id) REFERENCES users(id)
    )
  `,

  /**
   * 配额使用表
   */
  quota_usage: `
    CREATE TABLE IF NOT EXISTS quota_usage (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      resource_type TEXT NOT NULL CHECK(resource_type IN ('TOOL', 'CLOUD_TEMPLATE', 'VALIDATION', 'CONCURRENT_TASK', 'STORAGE')),
      used_count INTEGER DEFAULT 0,
      limit_count INTEGER NOT NULL,
      reset_at INTEGER NOT NULL,
      created_at INTEGER NOT NULL,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    )
  `,

  /**
   * 订阅表
   */
  subscriptions: `
    CREATE TABLE IF NOT EXISTS subscriptions (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      tier TEXT NOT NULL CHECK(tier IN ('PROFESSIONAL', 'TEAM', 'ENTERPRISE')),
      status TEXT NOT NULL CHECK(status IN ('ACTIVE', 'CANCELLED', 'EXPIRED')),
      start_date TEXT NOT NULL,
      end_date TEXT,
      auto_renew INTEGER DEFAULT 1 CHECK(auto_renew IN (0, 1)),
      payment_method TEXT CHECK(payment_method IN ('ALIPAY', 'WECHAT', 'STRIPE')),
      created_at INTEGER NOT NULL,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    )
  `,

  /**
   * 审计日志表
   */
  audit_logs: `
    CREATE TABLE IF NOT EXISTS audit_logs (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      action TEXT NOT NULL,
      resource_type TEXT NOT NULL,
      resource_id TEXT,
      timestamp INTEGER NOT NULL,
      ip_address TEXT,
      metadata TEXT,
      FOREIGN KEY (user_id) REFERENCES users(id)
    )
  `,
};

/**
 * 创建索引的SQL语句
 */
export const CREATE_INDEXES_SQL_V2 = [
  // users表索引
  'CREATE INDEX IF NOT EXISTS idx_users_email ON users(email)',
  'CREATE INDEX IF NOT EXISTS idx_users_tier ON users(tier)',
  
  // organizations表索引
  'CREATE INDEX IF NOT EXISTS idx_organizations_owner ON organizations(owner_id)',
  
  // quota_usage表索引
  'CREATE INDEX IF NOT EXISTS idx_quota_user ON quota_usage(user_id)',
  'CREATE INDEX IF NOT EXISTS idx_quota_type ON quota_usage(resource_type)',
  
  // subscriptions表索引
  'CREATE INDEX IF NOT EXISTS idx_subscriptions_user ON subscriptions(user_id)',
  'CREATE INDEX IF NOT EXISTS idx_subscriptions_status ON subscriptions(status)',
  
  // audit_logs表索引
  'CREATE INDEX IF NOT EXISTS idx_audit_user ON audit_logs(user_id)',
  'CREATE INDEX IF NOT EXISTS idx_audit_timestamp ON audit_logs(timestamp)',
  'CREATE INDEX IF NOT EXISTS idx_audit_resource ON audit_logs(resource_type, resource_id)',
];

/**
 * 初始化M6数据库
 */
export function initializeDatabaseV2(db: Database.Database): void {
  // 启用外键约束
  db.pragma('foreign_keys = ON');

  // 创建所有表
  Object.values(CREATE_TABLES_SQL_V2).forEach(sql => {
    db.exec(sql);
  });

  // 创建索引
  CREATE_INDEXES_SQL_V2.forEach(sql => {
    db.exec(sql);
  });

  console.log('✅ M6数据库初始化完成（5张核心表）');
}
