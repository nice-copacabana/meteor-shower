// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-15
// Task: 设计用户分层系统的数据库Schema，包含users、subscriptions、usage_stats、organizations表

/**
 * 数据库Schema定义
 * 
 * 使用SQLite实现用户分层系统的数据持久化
 */

import Database from 'better-sqlite3';
import { UserTier, SubscriptionStatus, UserRole } from '../types.js';

/**
 * 创建数据库表的SQL语句
 */
export const CREATE_TABLES_SQL = {
  /**
   * 用户表
   */
  users: `
    CREATE TABLE IF NOT EXISTS users (
      id TEXT PRIMARY KEY,
      email TEXT UNIQUE NOT NULL,
      name TEXT NOT NULL,
      tier TEXT NOT NULL CHECK(tier IN ('free', 'pro', 'team', 'enterprise')),
      organization_id TEXT,
      role TEXT CHECK(role IN ('enterprise_admin', 'department_admin', 'team_admin', 'member', 'guest')),
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      FOREIGN KEY (organization_id) REFERENCES organizations(id)
    )
  `,

  /**
   * 订阅表
   */
  subscriptions: `
    CREATE TABLE IF NOT EXISTS subscriptions (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      status TEXT NOT NULL CHECK(status IN ('active', 'cancelled', 'expired', 'trial')),
      start_date INTEGER NOT NULL,
      end_date INTEGER NOT NULL,
      auto_renew INTEGER DEFAULT 0 CHECK(auto_renew IN (0, 1)),
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    )
  `,

  /**
   * 使用量统计表
   */
  usage_stats: `
    CREATE TABLE IF NOT EXISTS usage_stats (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      storage_used INTEGER DEFAULT 0,
      validation_runs INTEGER DEFAULT 0,
      active_tasks INTEGER DEFAULT 0,
      tools_configured INTEGER DEFAULT 0,
      cloud_templates INTEGER DEFAULT 0,
      month TEXT NOT NULL,
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
      UNIQUE(user_id, month)
    )
  `,

  /**
   * 组织表
   */
  organizations: `
    CREATE TABLE IF NOT EXISTS organizations (
      id TEXT PRIMARY KEY,
      name TEXT NOT NULL,
      tier TEXT NOT NULL CHECK(tier IN ('team', 'enterprise')),
      owner_id TEXT NOT NULL,
      seats_total INTEGER NOT NULL,
      seats_used INTEGER DEFAULT 0,
      subscription_id TEXT,
      allow_public_templates INTEGER DEFAULT 1 CHECK(allow_public_templates IN (0, 1)),
      require_approval INTEGER DEFAULT 0 CHECK(require_approval IN (0, 1)),
      sso_enabled INTEGER DEFAULT 0 CHECK(sso_enabled IN (0, 1)),
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      FOREIGN KEY (owner_id) REFERENCES users(id)
    )
  `,

  /**
   * 部门表（仅企业版）
   */
  departments: `
    CREATE TABLE IF NOT EXISTS departments (
      id TEXT PRIMARY KEY,
      name TEXT NOT NULL,
      organization_id TEXT NOT NULL,
      created_at INTEGER NOT NULL,
      updated_at INTEGER NOT NULL,
      FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE
    )
  `,

  /**
   * 部门管理员关联表
   */
  department_admins: `
    CREATE TABLE IF NOT EXISTS department_admins (
      department_id TEXT NOT NULL,
      user_id TEXT NOT NULL,
      created_at INTEGER NOT NULL,
      PRIMARY KEY (department_id, user_id),
      FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    )
  `,

  /**
   * 部门成员关联表
   */
  department_members: `
    CREATE TABLE IF NOT EXISTS department_members (
      department_id TEXT NOT NULL,
      user_id TEXT NOT NULL,
      created_at INTEGER NOT NULL,
      PRIMARY KEY (department_id, user_id),
      FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    )
  `,
};

/**
 * 创建索引的SQL语句
 */
export const CREATE_INDEXES_SQL = [
  'CREATE INDEX IF NOT EXISTS idx_users_email ON users(email)',
  'CREATE INDEX IF NOT EXISTS idx_users_organization ON users(organization_id)',
  'CREATE INDEX IF NOT EXISTS idx_subscriptions_user ON subscriptions(user_id)',
  'CREATE INDEX IF NOT EXISTS idx_usage_stats_user_month ON usage_stats(user_id, month)',
  'CREATE INDEX IF NOT EXISTS idx_departments_org ON departments(organization_id)',
];

/**
 * 初始化数据库
 */
export function initializeDatabase(db: Database.Database): void {
  // 启用外键约束
  db.pragma('foreign_keys = ON');

  // 创建所有表
  Object.values(CREATE_TABLES_SQL).forEach(sql => {
    db.exec(sql);
  });

  // 创建索引
  CREATE_INDEXES_SQL.forEach(sql => {
    db.exec(sql);
  });

  console.log('✅ 数据库初始化完成');
}

/**
 * 数据库迁移版本管理
 */
export const MIGRATIONS = [
  {
    version: 1,
    name: 'initial_schema',
    up: (db: Database.Database) => {
      initializeDatabase(db);
    },
    down: (db: Database.Database) => {
      const tables = [
        'department_members',
        'department_admins',
        'departments',
        'organizations',
        'usage_stats',
        'subscriptions',
        'users',
      ];
      tables.forEach(table => {
        db.exec(`DROP TABLE IF EXISTS ${table}`);
      });
    },
  },
];
