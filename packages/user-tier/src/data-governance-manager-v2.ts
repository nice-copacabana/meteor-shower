// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-17
// Task: 实现DataGovernanceManager数据治理管理器和五级可见性控制

/**
 * 数据治理管理器V2
 * 
 * 实现五级数据可见性控制：Private/Team/Department/Enterprise/Public
 */

import Database from 'better-sqlite3';

/**
 * 数据可见性级别
 */
export type DataVisibility = 'PRIVATE' | 'TEAM' | 'DEPARTMENT' | 'ENTERPRISE' | 'PUBLIC';

/**
 * 资源类型
 */
export type ResourceType = 'TEMPLATE' | 'CASE' | 'TASK' | 'CONFIG';

/**
 * 数据治理管理器
 */
export class DataGovernanceManagerV2 {
  constructor(private db: Database.Database) {}

  /**
   * 检查用户是否有访问权限
   */
  canAccess(params: {
    userId: string;
    resourceId: string;
    resourceType: ResourceType;
    visibility: DataVisibility;
    ownerId: string;
    teamId?: string;
    departmentId?: string;
    organizationId?: string;
  }): boolean {
    const { userId, visibility, ownerId, teamId, departmentId, organizationId } = params;

    // PUBLIC - 所有人可访问
    if (visibility === 'PUBLIC') {
      return true;
    }

    // PRIVATE - 仅所有者
    if (visibility === 'PRIVATE') {
      return userId === ownerId;
    }

    // TEAM - 团队成员
    if (visibility === 'TEAM') {
      if (userId === ownerId) return true;
      if (!teamId) return false;
      return this.isTeamMember(userId, teamId);
    }

    // DEPARTMENT - 部门成员
    if (visibility === 'DEPARTMENT') {
      if (userId === ownerId) return true;
      if (!departmentId) return false;
      return this.isDepartmentMember(userId, departmentId);
    }

    // ENTERPRISE - 企业成员
    if (visibility === 'ENTERPRISE') {
      if (userId === ownerId) return true;
      if (!organizationId) return false;
      return this.isOrganizationMember(userId, organizationId);
    }

    return false;
  }

  /**
   * 检查是否为团队成员
   */
  private isTeamMember(userId: string, teamId: string): boolean {
    // 简化实现，实际需要team_members表
    return true; // 占位符
  }

  /**
   * 检查是否为部门成员
   */
  private isDepartmentMember(userId: string, departmentId: string): boolean {
    const stmt = this.db.prepare(`
      SELECT 1 FROM department_members 
      WHERE department_id = ? AND user_id = ?
    `);
    return !!stmt.get(departmentId, userId);
  }

  /**
   * 检查是否为组织成员
   */
  private isOrganizationMember(userId: string, organizationId: string): boolean {
    const stmt = this.db.prepare(`
      SELECT 1 FROM users 
      WHERE id = ? AND organization_id = ?
    `);
    return !!stmt.get(userId, organizationId);
  }

  /**
   * 获取允许的可见性级别
   */
  getAllowedVisibilities(userId: string): DataVisibility[] {
    const user = this.db.prepare('SELECT * FROM users WHERE id = ?').get(userId) as any;
    
    if (!user) {
      return ['PUBLIC'];
    }

    const visibilities: DataVisibility[] = ['PRIVATE', 'PUBLIC'];

    if (user.tier === 'TEAM' || user.tier === 'ENTERPRISE') {
      visibilities.push('TEAM');
    }

    if (user.tier === 'ENTERPRISE') {
      visibilities.push('DEPARTMENT', 'ENTERPRISE');
    }

    return visibilities;
  }
}
